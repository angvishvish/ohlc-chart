{"version":3,"sources":["components/common/Header.js","api/index.js","components/helper/index.js","components/OHLCChart.js","components/common/DropDownMenu.js","components/LiveCharts.js","index.js"],"names":["Header","className","to","Axios","create","baseURL","am4core","am4themes_animated","minPolylineStep","queue","deferredDelay","onlyShowOnViewport","RoundOffFloat","value","parseFloat","toFixed","CreateChartData","chartData","filteredArr","Set","FinalData","Array","from","reverse","map","data","index","dataSplit","split","date","moment","parseInt","format","open","high","low","close","CreateOHLCCharts","chart","am4charts","dateAxis","xAxes","push","series","yAxes","lineSeries","scrollbarX","paddingRight","dateFormatter","inputDateFormat","renderer","grid","template","location","dateFormats","setKey","minBulletDistance","dataFields","dateX","openValueY","lowValueY","highValueY","valueY","tooltipText","strokeWidth","cursor","defaultState","properties","visible","hiddenInLegend","fillOpacity","strokeOpacity","OHLCChart","componentDidMount","getChart","setState","isLoading","get","then","res","createChart","disposeChart","addData","events","on","dispose","state","this","Fragment","id","style","width","height","Component","createOptions","options","key","text","DropDownMenu","handleInterval","e","props","Menu","interval","Dropdown","simple","item","closeOnChange","defaultValue","onChange","LiveCharts","getChartData","intervalQuery","clearInterval","liveChartIntervalId","liveChartData","setInterval","console","log","length","history","createBrowserHistory","basename","process","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.810d0bca.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui two item menu\">\r\n        <Link className=\"item\" to=\"/ohlc-chart/\">Home</Link>\r\n        <Link className=\"item\" to=\"/ohlc-chart/live-charts\">Live Charts</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Axios from 'axios';\r\n\r\nexport default Axios.create({\r\n    baseURL: 'http://kaboom.rksv.net/api/',\r\n})","import moment from 'moment';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\nam4core.options.minPolylineStep = 5;\r\nam4core.options.queue = true;\r\nam4core.options.deferredDelay = 500;\r\nam4core.options.onlyShowOnViewport = true;\r\n\r\nconst RoundOffFloat = (value = 0) => {\r\n    return parseFloat(value).toFixed(2);\r\n}\r\n\r\nexport const CreateChartData = (chartData = []) => {\r\n    const filteredArr = new Set(chartData);\r\n    const FinalData = Array.from(filteredArr).reverse().map((data, index) => {\r\n        const dataSplit = data.split(',');\r\n        const dataObj = {\r\n            date: moment(parseInt(dataSplit[0])).format('YYYY-MM-DD'),\r\n            open: RoundOffFloat(dataSplit[1]),\r\n            high: RoundOffFloat(dataSplit[2]),\r\n            low: RoundOffFloat(dataSplit[3]),\r\n            close: RoundOffFloat(dataSplit[4])\r\n        }\r\n        return dataObj;\r\n    });\r\n    return FinalData;\r\n}\r\n\r\nexport const CreateOHLCCharts = () => {\r\n    const chart = am4core.create(\"chartDiv\", am4charts.XYChart);\r\n    const dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    // eslint-disable-next-line\r\n    const valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    const series = chart.series.push(new am4charts.OHLCSeries());\r\n    const lineSeries = chart.series.push(new am4charts.LineSeries());\r\n    const scrollbarX = new am4charts.XYChartScrollbar();\r\n\r\n    \r\n    chart.paddingRight = 20;\r\n\r\n    chart.dateFormatter.inputDateFormat = \"YYYY-MM-dd\";\r\n\r\n    dateAxis.renderer.grid.template.location = 0;\r\n    dateAxis.dateFormats.setKey(\"day\", \"MMMM-YYYY\");\r\n\r\n    series.minBulletDistance = 20;\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.openValueY = \"open\";\r\n    series.dataFields.lowValueY = \"low\";\r\n    series.dataFields.highValueY = \"high\";\r\n    series.dataFields.valueY = \"close\";\r\n    // eslint-disable-next-line\r\n    series.tooltipText = \"Start: ₹{openValueY.value} \\n \\\r\n            Low: ₹{lowValueY.value} \\n \\\r\n            High: ₹{highValueY.value} \\n \\\r\n            End: ₹{valueY.value}\";\r\n    series.strokeWidth = 2;\r\n\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    lineSeries.dataFields.dateX = \"date\";\r\n    lineSeries.dataFields.valueY = \"close\";\r\n    // need to set on default state, as initially series is \"show\"\r\n    lineSeries.defaultState.properties.visible = false;\r\n\r\n    // hide from legend too (in case there is one)\r\n    lineSeries.hiddenInLegend = true;\r\n    lineSeries.fillOpacity = 0.5;\r\n    lineSeries.strokeOpacity = 0.5;\r\n\r\n    scrollbarX.series.push(lineSeries);\r\n    chart.scrollbarX = scrollbarX;\r\n\r\n    return chart;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport Axios from '../api';\r\nimport { CreateChartData, CreateOHLCCharts } from './helper';\r\n\r\n\r\nclass OHLCChart extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getChart();\r\n    }\r\n\r\n\r\n    getChart = () => {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n        Axios.get(`/historical?interval=9`).then(res => {\r\n            this.createChart(res.data);\r\n        });\r\n    }\r\n\r\n    createChart = (chartData) => {\r\n        this.disposeChart();\r\n        this.chart = CreateOHLCCharts();\r\n        this.chart.addData(CreateChartData(chartData));\r\n        this.chart.events.on(\"shown\", () =>{\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.disposeChart();\r\n    }\r\n\r\n    disposeChart = () => {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? <h3 className=\"flex-center\">Loading Updated Chart...</h3> : null}\r\n                <div id=\"chartDiv\" style={{ width: \"100%\", height: \"calc(100vh - 150px)\" }}></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OHLCChart;\r\n","import React, { Component } from 'react';\r\nimport { Dropdown, Menu } from 'semantic-ui-react';\r\n\r\nconst createOptions = () => {\r\n    const options = [];\r\n    for (let index = 1; index <= 9; index++) {\r\n        options.push({\r\n            key: index,\r\n            text: `Interval ${index} (${index * 200} Records)`,\r\n            value: index\r\n        });\r\n    }\r\n    return options;\r\n};\r\n\r\nclass DropDownMenu extends Component {\r\n\r\n    handleInterval = (e, data) => {\r\n        this.props.handleInterval(data.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Menu\r\n                key={this.props.interval}>\r\n                <Dropdown\r\n                    options={createOptions()}\r\n                    simple\r\n                    item\r\n                    closeOnChange\r\n                    defaultValue={this.props.interval}\r\n                    onChange={this.handleInterval} />\r\n            </Menu>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DropDownMenu;\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport Axios from '../api';\r\nimport DropDownMenu from './common/DropDownMenu';\r\nimport { CreateChartData, CreateOHLCCharts } from './helper';\r\n\r\nclass LiveCharts extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: true,\r\n            interval: 1,\r\n            liveChartIntervalId: null\r\n        };\r\n        this.chart = CreateOHLCCharts([]);\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        this.getChartData('?interval=1');\r\n    }\r\n\r\n    getChartData = (intervalQuery) => {\r\n        this.clearInterval();\r\n        Axios.get(`/historical${intervalQuery}`).then(res => {\r\n            this.createChart(res.data);\r\n        });\r\n    }\r\n\r\n    clearInterval = () => {\r\n        if (this.state.liveChartIntervalId) {\r\n            clearInterval(this.state.liveChartIntervalId);\r\n        }\r\n    }\r\n\r\n    createChart = (chartData) => {\r\n        this.disposeChart();\r\n        this.chart = CreateOHLCCharts();\r\n        const liveChartData = CreateChartData(chartData);\r\n        // for\r\n        let index = 0;\r\n        const liveChartIntervalId = setInterval(() => {\r\n            console.log(index)\r\n            if (liveChartData.length !== index) {\r\n                this.chart.addData(liveChartData[index++])\r\n            } else {\r\n                this.clearInterval();\r\n            }\r\n        }, 250)\r\n        this.setState({\r\n            liveChartIntervalId\r\n        })\r\n        this.chart.events.on(\"ready\", () =>{\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearInterval();\r\n        this.disposeChart();\r\n    }\r\n\r\n    disposeChart = () => {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Filter Interval results as per your requirement:</h3>\r\n                <DropDownMenu\r\n                    interval={this.state.interval}\r\n                    handleInterval={(interval) => this.getChartData(`?interval=${interval}`, true)} />\r\n                {this.state.isLoading ? <h3 className=\"flex-center\">Loading Updated Chart...</h3> : null}\r\n                <div id=\"chartDiv\" style={{ width: \"100%\", height: \"calc(100vh - 150px)\" }}></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default LiveCharts;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './components/common/Header';\r\nimport OHLCChart from './components/OHLCChart';\r\nimport LiveCharts from './components/LiveCharts';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './assets/style.css';\r\n\r\nimport { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory({\r\n    basename: process.env.PUBLIC_URL\r\n});\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter>\r\n                <div className=\"padding-top pos-relative\">\r\n                    <Header />\r\n                    <Route path=\"/ohlc-chart\" exact component={OHLCChart} />\r\n                    <Route path=\"/ohlc-chart/live-charts\" component={LiveCharts} />\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}